mod cluster;
mod cluster_graph;
mod position;
mod rotated_cluster;
mod token_in_cluster;

use anyhow::Error;
use serde::{Deserialize, Serialize};
use std::path::PathBuf;
use structopt::StructOpt;

#[derive(Debug, StructOpt)]
pub struct Clusterize {
    /// The input file, generated by `tokenize`.
    tokens: PathBuf,
    /// The output JSON file.
    output: PathBuf,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ClusterizeOut {}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(transparent)]
pub struct ClusterId(u16);

pub fn clusterize(cmd: Clusterize) -> Result<(), Error> {
    Ok(())
}
